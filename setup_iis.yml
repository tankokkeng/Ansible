---
- name: Configure Windows hostname, install IIS with additional components, disable IPv6, install Chocolatey and Git, and set up IIS site with code from GitHub
  hosts: IIS
  gather_facts: no

  tasks:
    - name: Set the hostname to "PG-IIS"
      ansible.windows.win_hostname:
        name: PG-IIS
      register: hostname_result

    - name: Display result of hostname change
      debug:
        var: hostname_result

    - name: Install IIS with .NET Framework, ASP.NET, ISAPI, and .NET Extensibility components
      ansible.windows.win_feature:
        name:
          - Web-Server                # IIS
          - Web-Mgmt-Console          # IIS Management Console
          - NET-Framework-Features    # .NET Framework 3.5
          - NET-Framework-45-Features # .NET Framework 4.8
          - Web-Asp-Net45             # ASP.NET 4.8
          - Web-ISAPI-Ext             # ISAPI Extensions
          - Web-ISAPI-Filter          # ISAPI Filters
          - Web-Net-Ext               # .NET Extensibility 3.5
          - Web-Net-Ext45             # .NET Extensibility 4.8
        state: present
      register: iis_install_result

    - name: Display result of IIS and components installation
      debug:
        var: iis_install_result

    - name: Disable IPv6 on the NIC
      ansible.windows.win_regedit:
        path: 'HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip6\Parameters'
        name: DisabledComponents
        type: dword
        value: 0xFFFFFFFF  # Disables all IPv6 components
      register: disable_ipv6_result

    - name: Display result of IPv6 disable task
      debug:
        var: disable_ipv6_result
        
    - name: Remove Chocolatey directory if any, before download and install
      ansible.windows.win_file:
        path: C:\ProgramData\chocolatey
        state: absent

    - name: Download and install Chocolatey
      ansible.windows.win_shell: |
        Set-ExecutionPolicy Bypass -Scope Process -Force;
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12;
        Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
      args:
        executable: powershell.exe
      register: choco_install
      ignore_errors: yes  # Ignore errors if Chocolatey is already installed

    - name: Verify Chocolatey installation
      ansible.windows.win_command: choco --version
      register: choco_version
      failed_when: choco_version.rc != 0
      changed_when: false

    - name: Display Chocolatey version
      debug:
        msg: "Chocolatey installed. Version: {{ choco_version.stdout }}"        

    - name: Ensure Chocolatey is installed
      win_chocolatey:
        name: chocolatey
        state: present
      register: chocolatey_result

    - name: Display result of Chocolatey installation
      debug:
        var: chocolatey_result

    - name: Install Git using Chocolatey
      win_chocolatey:
        name: git
        state: present
      register: git_install_result

    - name: Display result of Git installation
      debug:
        var: git_install_result

    - name: Clone IIS website code from GitHub if not already present
      ansible.windows.win_command: |
        git clone https://github.com/AzureWorkshops/samples-simple-iis-website C:\inetpub\wwwroot\samples-simple-iis-website
      args:
        chdir: C:\inetpub\wwwroot
      register: git_clone_result
      ignore_errors: yes  # Ignore errors if repo already exists

    - name: Update IIS website code if already cloned
      ansible.windows.win_command: |
        git pull
      args:
        chdir: C:\inetpub\wwwroot\samples-simple-iis-website
      when: git_clone_result.failed  # Only run if the clone command failed (repo already exists)
      register: git_pull_result

    - name: Configure IIS site for the cloned website
      community.windows.win_iis_website:
        name: "SampleIISWebsite"
        physical_path: "C:\\inetpub\\wwwroot\\samples-simple-iis-website"
        state: started
        port: 80
      register: iis_site_result

    - name: Display result of IIS site configuration
      debug:
        var: iis_site_result

    - name: Ensure Default.aspx is set as the default document
      community.windows.win_iis_webapplication:
        name: "SampleIISWebsite"        
        site: "SampleIISWebsite"
        physical_path: "C:\\inetpub\\wwwroot\\samples-simple-iis-website"
        default_documents:
          - Default.aspx
      register: default_document_result

    - name: Display result of setting default document
      debug:
        var: default_document_result
